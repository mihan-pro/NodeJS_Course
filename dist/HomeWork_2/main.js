"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.sequelize=exports.Users=exports.UserGroups=exports.Groups=void 0;var _express=_interopRequireDefault(require("express"));var _dotenv=_interopRequireDefault(require("dotenv"));var _openSequelizeConnection=require("./data-access/open-sequelize-connection");var _checkConnection=require("./data-access/check-connection");var _initApp=require("./services/init-app");var _getUserModel=require("./data-access/Users/get-user-model");var _Users=require("./routers/Users");var _Groups=require("./routers/Groups");var _constants=require("./constants");var _getGroupModel=require("./data-access/Groups/get-group-model");var _createUserGroupModel=require("./data-access/UserGroup/create-user-group-model");var _UserGroup=require("./routers/UserGroup");var _logServiceRequest=require("./middlewares/log-service-request");var _errorLogger=require("./services/error-logger");var _logError=require("./middlewares/log-error");var _login=require("./routers/login");var _checkAuthorisation=require("./middlewares/check-authorisation");var _index=_interopRequireDefault(require("cors/lib/index"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}_dotenv.default.config();const server=(0,_express.default)();const sequelize=(0,_openSequelizeConnection.openSequelizeConnection)();exports.sequelize=sequelize;const Users=(0,_getUserModel.getUserModel)(sequelize);exports.Users=Users;const Groups=(0,_getGroupModel.getGroupsModel)(sequelize);exports.Groups=Groups;const UserGroups=(0,_createUserGroupModel.getUserGroupModel)(sequelize);exports.UserGroups=UserGroups;(0,_checkConnection.checkConnection)(sequelize);server.use(_express.default.json()).use((0,_index.default)({origin:'https://www.facebook.com'})).use(_logServiceRequest.logServiceRequest).use(_constants.ROUTES.LOGIN,_login.LoginRouter).use(_constants.ROUTES.USERS,_checkAuthorisation.checkAuthorisation,_Users.UsersRouter).use(_constants.ROUTES.GROUPS,_checkAuthorisation.checkAuthorisation,_Groups.GroupsRouter).use(_constants.ROUTES.USER_GROUPS,_checkAuthorisation.checkAuthorisation,_UserGroup.UserGroupRouter).use(_logError.logError);server.listen(process.env.PORT,()=>{(0,_initApp.initApp)();console.log(`Server started on port ${process.env.PORT}`);});process.on('uncaughtException',_errorLogger.errorHandler);process.on('unhandledRejection',_errorLogger.errorHandler);